library(prophet)
library(lubridate)
library(ggplot2)
library(pacman)
pacman::p_load(data.table, fixest, BatchGetSymbols, finreportr, ggplot2, lubridate)
first.date <- Sys.Date() - 2500
last.date <- Sys.Date()
freq.data <- "daily"
tickers <- c("BALKRISIND.NS")
stocks <- BatchGetSymbols(tickers = tickers,
first.date = first.date,
last.date = last.date,
freq.data = freq.data,
do.cache = FALSE,
thresh.bad.data = 0)
data<-stocks$df.tickers
data<-na.omit(data)
head(data)
qplot(data$ref.date, data$price.close,data=data)
ds <- data$ref.date
y <- data$price.close
df <- data.frame(ds, y)
head(df)
m <- prophet(df)
future <- make_future_dataframe(m, periods = 30)
forecast <- predict(m, future)
library(ranger)
library(pROC)
library(caret)
library(data.table)
library(caTools)
creditcard_data <- read.csv("creditcard.csv")
getwd()
setwd("C:/Users/ashwi/Documents/R/Credit Card")
library(ranger)
library(pROC)
library(caret)
library(data.table)
library(caTools)
creditcard_data <- read.csv("creditcard.csv")
head(creditcard_data)
table(creditcard_data$Class)
summary(creditcard_data$Amount)
names(creditcard_data)
var(creditcard_data$Amount)
creditcard_data$Amount=scale(creditcard_data$Amount)
NewData=creditcard_data[,-c(1)]
head(NewData)
set.seed(123)
data_sample = sample.split(NewData$Class,SplitRatio=0.80)
train_data = subset(NewData,data_sample==TRUE)
test_data = subset(NewData,data_sample==FALSE)
dim(train_data)
dim(test_data)
Logistic_Model=glm(Class~.,test_data,family=binomial())
summary(Logistic_Model)
plot(Logistic_Model)
library(rpart)
library(rpart.plot)
decisionTree_model <- rpart(Class ~ . , creditcard_data, method = 'class')
predicted_val <- predict(decisionTree_model, creditcard_data, type = 'class')
probability <- predict(decisionTree_model, creditcard_data, type = 'prob')
rpart.plot(decisionTree_model)
library(neuralnet)
ANN_model =neuralnet (Class~.,train_data,linear.output=FALSE)
plot(ANN_model)
predANN=compute(ANN_model,test_data)
resultANN=predANN$net.result
resultANN=ifelse(resultANN>0.5,1,0)
print(resultANN)
library(pROC)
lr.predict <- predict(Logistic_Model,train_data, probability = TRUE)
auc.gbm = roc(test_data$Class, lr.predict, plot = TRUE, col = "blue")
lr.predict <- predict(Logistic_Model,train_data, probability = TRUE)
lr.predict
