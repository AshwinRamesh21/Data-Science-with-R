library(kernlab)
library(caTools)
library(boot)
data(spam)
str(spam[,1:5])
table(spam$type)
set.seed(32)
split = sample.split(spam$type, SplitRatio = 0.7)
trainSpam = subset(spam, split == T)
testSpam = subset(spam, split ==F)
names(spam)
head(spam)[,1:6]
plot(
log10(trainSpam$capitalAve+1) ~trainSpam$type,
ylab = "Frequency of occurance",
xlab = "Type")
plot(log10(trainSpam[,1:4]+1))
mdist = dist(t(log(trainSpam[,1:55]+1)))
hclustering = hclust(mdist)
plot(as.dendrogram(hclustering))
trainSpam$numType = as.numeric(trainSpam$type)-1
costFunc = function(x,y){
sum(x != (y > 0.5))
}
mdist = dist(t(log(trainSpam[,1:55]+1)))
plot(
log10(trainSpam$capitalAve+1) ~trainSpam$type,
ylab = "Frequency of occurance",
xlab = "Type")
plot(log10(trainSpam[,1:4]+1))
mdist = dist(t(log(trainSpam[,1:55]+1)))
hclustering = hclust(mdist)
plot(as.dendrogram(hclustering))
trainSpam$numType = as.numeric(trainSpam$type)-1
costFunc = function(x,y){
sum(x != (y > 0.5))
}
cvError = rep(NULL, 55)
suppressWarnings(
for(i in 1:55){
lmFormula = reformulate(names(trainSpam)[i], response = "numType")
glmFit = glm(lmFormula, family = "binomial", data = trainSpam)
cvError[i] = cv.glm(trainSpam, glmFit, costFunc, 2)$delta[2]
}
)
predModel = suppressWarnings(
glm(
numType ~ charDollar+charExclamation+remove+money+free,
family = "binomial",
data = trainSpam
)
)
suppressWarnings(
for(i in 1:55){
lmFormula = reformulate(names(trainSpam)[i], response = "numType")
glmFit = glm(lmFormula, family = "binomial", data = trainSpam)
cvError[i] = cv.glm(trainSpam, glmFit, costFunc, 2)$delta[2]
}
)
predModel = suppressWarnings(
glm(
numType ~ charDollar+charExclamation+remove+money+free,
family = "binomial",
data = trainSpam
)
)
pred_y = as.character(
ifelse(
as.numeric(predict(predModel, testSpam))>0.5,
"spam",
"nonspam"
)
)
crossTab = table(pred_y,testSpam$type)
print(crossTab)
accuracy = sum(crossTab[-c(2:3)])/sum(crossTab[1:4])
accuracy = accuracy * 100
print(accuracy)
