shiny::runApp()
shiny::runApp()
#install.packages("factoextra")
library(factoextra)
# Loading dataset
df <- mtcars
# Omitting any NA values
df <- na.omit(df)
# Scaling dataset
df <- scale(df)
# output to be present as PNG file
png(file = "KMeansCluster4.png")
km <- kmeans(df, centers = 3, nstart = 25)
# Visualize the clusters
fviz_cluster(km, data = df)
# saving the file
dev.off()
# output to be present as PNG file
png(file = "KMeansCluster5.png")
km <- kmeans(df, centers = 5, nstart = 25)
# Visualize the clusters
fviz_cluster(km, data = df)
# saving the file
dev.off()
library(ggplot2)
library(shiny)
library(gganimate)
library(gapminder)
theme_set(theme_bw())
View(gapminder)
#graph animation working with:bin_2d, boxplot, col, count, rug, tile, hex, point
#only graph image (exclude animation):bin2d, density_2d, line, path
gplot <- ggplot(gapminder, aes(gdpPercap, lifeExp, size = pop, colour = country)) +
geom_point(alpha = 0.7) +
scale_color_manual(values = country_colors) +
scale_size(range = c(2,15)) +
scale_x_log10() +
facet_wrap(~continent) +
theme(legend.position = 'none') +
theme(axis.text = element_text(size = 20), axis.title = element_text(size = 22, face = 'bold'),
strip.text = element_text(size = 20))
print(gplot)
shiny::runApp()
install.packages("ClusterR")
install.packages("cluster")
library(ClusterR)
library(cluster)
iris_1 <- iris[, -5]
set.seed(240)
kmeans.re <- kmeans(iris_1, centers = 3, nstart = 20)
kmeans.re
print(kmeans.re$cluster)
kmeans.re$cluster
library(ClusterR)
library(cluster)
iris_1 <- iris[, -5]
set.seed(240)
kmeans.re <- kmeans(iris_1, centers = 3, nstart = 20)
print(kmeans.re)
print(kmeans.re$cluster)
conf_mat <-table(iris$Species, kmeans.re$cluster)
print(paste('Confusion Matrix', conf_mat))
print(conf_mat)
library(ClusterR)
library(cluster)
iris_1 <- iris[, -5]
set.seed(240)
kmeans.re <- kmeans(iris_1, centers = 3, nstart = 20)
print(kmeans.re)
print(kmeans.re$cluster)
conf_mat <-table(iris$Species, kmeans.re$cluster)
print(conf_mat)
plot(iris_1[c("Sepal.Length", "Sepal.Width")])
plot(iris_1[c("Sepal.Length", "Sepal.Width")],
col = kmeans.re$cluster)
plot(iris_1[c("Sepal.Length", "Sepal.Width")],
col = kmeans.re$cluster,
main = "K-means with 3 clusters")
plot(iris_1[c("Sepal.Length", "Sepal.Width")], col = kmeans.re$cluster,
main = "3 Clustered K-Means")
kmeans.re$centers
kmeans.re$centers[, c("Sepal.Length", "Sepal.Width")]
kmeans.re$centers
points(kmeans.re$centers[, c("Sepal.Length", "Sepal.Width")],
col = 1:3, pch = 8, cex = 3)
y_kmeans <- kmeans.re$cluster
clusplot(iris_1[, c("Sepal.Length", "Sepal.Width")],
y_kmeans,
lines = 0,
shade = TRUE,
color = TRUE,
labels = 2,
plotchar = FALSE,
span = TRUE,
main = paste("Cluster iris"),
xlab = 'Sepal.Length',
ylab = 'Sepal.Width')
data("USArrests")
head(USArrests)
library(cluster)
library(factoextra)
library(factoextra)
library(cluster)
data("USArrests")
head(USArrests)
USArrests <- scale(USArrests)
dim(USArrests)
head(USArrests)
set.seed(123)
crime <- sample(1:50,10)
crime_1 <- USArrests[crime,]
head(crime_1)
euc_dist <- dist(crime_1, method = "euclidean")
head(euc_dist)
wss <- sapply(1:crime,
function(k){kmeans(USArrests, k, nstart=20,iter.max = 15)$tot.withinss})
plot(1:crime, wss,
type="b", pch = 19, frame = FALSE,
xlab="Number of clusters K",
ylab="Total within-clusters sum of squares")
fviz_nbclust(USArrests, kmeans, method = 'wss') +
geom_vline(xintercept = 4, linetype=5, col= "darkred")
fviz_nbclust(USArrests, kmeans, method = 'wss') +
geom_vline(xintercept = 4, linetype=5, col= "darkred")
km.res <- kmeans(USArrests, 4, nstart = 20)
km.res
df_member <- cbind(USArrests, cluster = km.res$cluster)
head(df_member,10)
fviz_cluster(km.res, data = USArrests,
palette=c("red", "blue", "black", "darkgreen"),
ellipse.type = "euclid",
star.plot = T,
repel = T,
ggtheme = theme())
shiny::runApp()
